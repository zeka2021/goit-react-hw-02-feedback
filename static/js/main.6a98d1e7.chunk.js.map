{"version":3,"sources":["Container/Container.js","Section/Section.js","Statistics/Statistics.js","FeedbackOptions/FeedbackOptions.js","Notification/Notification.js","App.js","index.js","Statistics/Statistics.module.css","FeedbackOptions/FeedbackOptions.module.css"],"names":["Container","children","Section","this","props","title","Component","Statistics","good","neutral","bad","total","positivePercentage","className","s","container","item","FeedbackOptions","options","onLeaveFeedback","feedbackList","map","option","button","type","value","onClick","Notification","message","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","handleClick","setState","prevState","keys","hidden","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAGeA,MAHf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,8BAAMA,KCGTC,E,4JACJ,WACE,OACE,kCACE,eAAC,EAAD,WACE,6BAAKC,KAAKC,MAAMC,QACfF,KAAKC,MAAMH,kB,GANAK,aAiBPJ,I,gBCjBTK,E,4JACJ,WACE,MAA0DJ,KAAKC,MAAvDI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACE,qBAAIC,UAAS,eAAUC,IAAEC,WAAzB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,UACE,4BAAIR,IACJ,4CAEF,qBAAIK,UAAWC,IAAEE,KAAjB,UACE,4BAAIP,IACJ,+CAEF,qBAAII,UAAWC,IAAEE,KAAjB,UACE,4BAAIN,IACJ,2CAEF,qBAAIG,UAAWC,IAAEE,KAAjB,UACE,4BAAIL,IACJ,4CAEF,qBAAIE,UAAWC,IAAEE,KAAjB,UACE,8BAAIJ,EAAJ,OACA,+D,GAvBeN,aAsCVC,I,gBCtCTU,E,4JACJ,WACE,MAAqCd,KAAKC,MAAlCc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,oBAAIN,UAAS,eAAUC,IAAEM,cAAzB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACET,UAAWC,IAAES,OACbC,KAAK,SACLC,MAAOH,EACPI,QAAS,kBAAMP,EAAgBG,IAJjC,SAMGA,KAPIA,Y,GANWhB,aA0BfW,IC3BTU,E,4JACJ,WACE,OAAO,4BAAIxB,KAAKC,MAAMwB,c,GAFCtB,aAUZqB,ICPTE,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACT,EAAOU,GAAR,OAAgBA,EAAMV,IAAO,I,EAGvEW,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKR,MAAMtB,KAAO,EAAKuB,qBAAwB,M,EAGpEQ,YAAc,SAAAjB,GACZ,EAAKkB,UAAS,SAAAC,GACZ,OAAO,eACJnB,EAASmB,EAAUnB,GAAU,O,4CAKpC,WACE,MAA+BnB,KAAK2B,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBQ,EAAUc,OAAOU,KAAKvC,KAAK2B,OAEjC,OACE,qCACE,oBAAIa,QAAM,EAAV,sBACA,cAAC,EAAD,CAAStC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAASA,EACTC,gBAAiBhB,KAAKoC,gBAG1B,cAAC,EAAD,CAASlC,MAAM,aAAf,SACGF,KAAK4B,qBAAuB,EAC3B,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOR,KAAK4B,qBACZnB,mBAAoBT,KAAKiC,oCAG3B,cAAC,EAAD,CAAcR,QAAQ,+B,GA9ChBtB,aAsDHuB,I,MCtDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,2B,kBCAnED,EAAOC,QAAU,CAAC,aAAe,sCAAsC,OAAS,mC","file":"static/js/main.6a98d1e7.chunk.js","sourcesContent":["function Container({ children }) {\n  return <div>{children}</div>;\n}\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\n\nclass Section extends Component {\n  render() {\n    return (\n      <section>\n        <Container>\n          <h2>{this.props.title}</h2>\n          {this.props.children}\n        </Container>\n      </section>\n    );\n  }\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={`list ${s.container}`}>\n        <li className={s.item}>\n          <p>{good}</p>\n          <span>GOOD:</span>\n        </li>\n        <li className={s.item}>\n          <p>{neutral}</p>\n          <span>NEUTRAL:</span>\n        </li>\n        <li className={s.item}>\n          <p>{bad}</p>\n          <span>BAD:</span>\n        </li>\n        <li className={s.item}>\n          <p>{total}</p>\n          <span>TOTAL</span>\n        </li>\n        <li className={s.item}>\n          <p>{positivePercentage}%</p>\n          <span>POSITIVE FEEDBACK</span>\n        </li>\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <ul className={`list ${s.feedbackList}`}>\n        {options.map(option => (\n          <li key={option}>\n            <button\n              className={s.button}\n              type=\"button\"\n              value={option}\n              onClick={() => onLeaveFeedback(option)}\n            >\n              {option}\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad'])),\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Notification extends Component {\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((value, acc) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  handleClick = option => {\n    this.setState(prevState => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    return (\n      <>\n        <h1 hidden>Comments</h1>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__3OmW3\",\"item\":\"Statistics_item__1Z4x3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__2_cih\",\"button\":\"FeedbackOptions_button__3Wp6g\"};"],"sourceRoot":""}